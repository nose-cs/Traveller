// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Traveller.Persistence;

#nullable disable

namespace Traveller.Persistence.Migrations
{
    [DbContext(typeof(TravellerContext))]
    [Migration("20231111181612_Make properties virtual")]
    partial class Makepropertiesvirtual
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Traveller.Domain.Models.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Facilities");
                });

            modelBuilder.Entity("Traveller.Domain.Models.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("FlightNumber")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("Traveller.Domain.Models.Hotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Hotels");
                });

            modelBuilder.Entity("Traveller.Domain.Models.Package", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Packages");
                });

            modelBuilder.Entity("Traveller.Domain.Models.PackageFacility", b =>
                {
                    b.Property<int>("FacilityId")
                        .HasColumnType("integer");

                    b.Property<int>("PackageId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<double>("Price")
                        .HasColumnType("double precision");

                    b.HasKey("FacilityId", "PackageId")
                        .HasName("PK_PackageFacility");

                    b.HasIndex("PackageId");

                    b.ToTable("PackageFacility");
                });

            modelBuilder.Entity("Traveller.Domain.Models.Tour", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("ArrivalDay")
                        .HasColumnType("integer");

                    b.Property<string>("ArrivalPlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("ArrivalTime")
                        .HasColumnType("time without time zone");

                    b.Property<int>("DepartureDay")
                        .HasColumnType("integer");

                    b.Property<string>("DeparturePlace")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<TimeOnly>("DepartureTime")
                        .HasColumnType("time without time zone");

                    b.Property<int?>("PackageId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PackageId");

                    b.ToTable("Tours");
                });

            modelBuilder.Entity("Traveller.Domain.Models.PackageFacility", b =>
                {
                    b.HasOne("Traveller.Domain.Models.Facility", "Facility")
                        .WithMany("Packages")
                        .HasForeignKey("FacilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traveller.Domain.Models.Package", "Package")
                        .WithMany("Facilities")
                        .HasForeignKey("PackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Facility");

                    b.Navigation("Package");
                });

            modelBuilder.Entity("Traveller.Domain.Models.Tour", b =>
                {
                    b.HasOne("Traveller.Domain.Models.Package", null)
                        .WithMany("Tours")
                        .HasForeignKey("PackageId");
                });

            modelBuilder.Entity("Traveller.Domain.Models.Facility", b =>
                {
                    b.Navigation("Packages");
                });

            modelBuilder.Entity("Traveller.Domain.Models.Package", b =>
                {
                    b.Navigation("Facilities");

                    b.Navigation("Tours");
                });
#pragma warning restore 612, 618
        }
    }
}
